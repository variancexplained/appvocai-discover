[tool.poetry]
name = "genailab"
version = "0.0.1"
description = "GenAI-Lab: Rethinking Generative AI LLMs - The Emergent Small Language Model (SLM) Cost Performance**"
authors = [
    "John James <john@variancexplained.com>",
]
license = "MIT"
requires-python = ">=3.7.1"
readme = "README.md"

documentation = "https://variancexplained.github.io/genai-lab-slm"
homepage = "https://variancexplained.github.io/genai-lab-slm"
repository = "https://github.com/variancexplained/genai-lab-slm"

classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]

packages = [
    { include = "genailab"}
]

[tool.poetry.dependencies]
python = ">=3.7.1, <4.0"

[tool.poetry.dev-dependencies]
autoflake = "*"
black = "*"
flake8 = "*"
flake8-bugbear = "*"
flake8-builtins = "*"
flake8-comprehensions = "*"
flake8-debugger = "*"
flake8-eradicate = "*"
flake8-logging-format = "*"
isort = "*"
mkdocstrings = {version = ">=0.18", extras = ["python"]}
mkdocs-material = "*"
mypy = "*"
pep8-naming = "*"
pre-commit = "*"
pymdown-extensions = "*"
pytest = "*"
pytest-github-actions-annotate-failures = "*"
pytest-cov = "*"
python-kacl = "*"
pyupgrade = "*"
tryceratops = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
src_paths = ["genailab", "tests"]

[tool.black]
target-version = ["py37", "py38", "py39", "py310"]
include = '\.pyi?$'

[tool.pytest.ini_options]
enable_assertion_pass_hook = true
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
norecursedirs = ["data"]
addopts = """
    --cov=genailab \
    --cov=tests \
    --cov-report=term-missing \
    --no-cov-on-fail \
    -s
"""
filterwarnings = [
    "ignore::pytest.PytestUnknownMarkWarning",
]


[tool.coverage.report]
fail_under = 100
exclude_lines = [
    'if TYPE_CHECKING:',
    'pragma: no cover'
]

